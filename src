const express = require('express');
const morgan = require('morgan');
const cors = require('cors');

const estudiantesRoutes = require('./routes/estudiantes.routes');

const app = express();
app.use(cors());
app.use(morgan('dev'));
app.use(express.json());

app.use('/api/estudiantes', estudiantesRoutes);
app.get('/health', (_req, res) => res.json({ ok: true }));

module.exports = app;

const mysql = require('mysql2/promise');

const pool = mysql.createPool({
  host: process.env.DB_HOST,
  port: Number(process.env.DB_PORT || 3306),
  user: process.env.DB_USER,
  password: process.env.DB_PASSWORD,
  database: process.env.DB_NAME,
  waitForConnections: true,
  connectionLimit: 10,
  queueLimit: 0
});

module.exports = pool;

require('dotenv').config();
const app = require('./app');
const pool = require('./db');

const PORT = process.env.PORT || 3000;

app.listen(PORT, () => {
  console.log(`üöÄ API en http://localhost:${PORT}`);
});

// Probar MySQL en segundo plano (no bloquea el arranque)
(async () => {
  try {
    const conn = await pool.getConnection();
    await conn.ping();
    conn.release();
    console.log('‚úÖ Conectado a MySQL');
  } catch (e) {
    console.error('‚ö†Ô∏è No se pudo conectar a MySQL al iniciar:', e.message);
  }
})();
